# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

---
name: SageMakerExample
super: InfraSageMaker
owner: Bosco Albert Baracus
images:
  - image: my_sm_image
    python_version: 3.8
    source: .
    type: python
    no_cache: true
task_defaults:
  python:
    mounts:
      - mount: mymount
        volume: smvolume
        path: /mnt/smvolume
pipelines:
  - pipeline: sagemaker_diamonds_train_and_inference
    start_date: 1970-01-01
    timeout_minutes: 45
    schedule: 0 * 1 * *
    tasks:
      - task: data_preprocessing
        type: python
        description: prepare the data for training
        cmd: python -u liminal_sm.py --action train data_prep --output_uri_base liminal-sm-example/data
        env:
          COMM_PATH: /mnt/smvolume
          SM_ROLE: '{{sagemaker_role}}'
      - task: train
        type: python
        description: train model
        cmd: python -u liminal_sm.py --action train --base_job_name liminal-base_training_job --train_instance_type ml.m5.large --n_jobs 5
        env:
          COMM_PATH: /mnt/smvolume
          SM_ROLE: '{{sagemaker_role}}'
      - task: deploy
        type: python
        description: Deploy model
        cmd: python -u liminal_sm.py --action deploy --model_name liminal-sm-diamonds-model --deploy_instance_type ml.m5.large
        env:
          COMM_PATH: /mnt/smvolume
          SM_ROLE: '{{sagemaker_role}}'
      - task: validate
        type: python
        description: validate model post deployment
        cmd: python -u liminal_sm.py --action validate
        env:
          COMM_PATH: /mnt/smvolume
          SM_ROLE: '{{sagemaker_role}}'
volumes:
  - volume: smvolume
    claim_name: smvolume-pvc
    local:
      path: .
